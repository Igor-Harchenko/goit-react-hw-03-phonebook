{"version":3,"sources":["components/Section/Section.module.css","components/Section/Section.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","Section","title","children","className","s","protoType","PropTypes","string","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","uuidv4","props","onSubmit","resetForm","form","this","label","input","type","pattern","required","onChange","button","React","Component","func","Filter","filter","onChangeFilter","sector","ContactList","contacts","deleteContact","list","map","item","onClick","App","addContact","data","prevState","some","includes","alert","currentId","changeFilter","event","toLocaleLowerCase","turnOnFilter","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4561f5a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3H78L\"};","import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.protoType = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport s from \"./ContactForm.module.css\";\n\nclass ContactForm extends React.Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const contact = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n    this.props.onSubmit(contact);\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n            value={this.state.name}\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n            value={this.state.number}\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.protoType = {\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ filter, onChangeFilter }) => {\n  return (\n    <div className={s.sector}>\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Введите имя контакта. Поиск не чувствительный к регистру вводимых символов.\"\n          required\n          onChange={onChangeFilter}\n          value={filter}\n        ></input>\n      </label>\n    </div>\n  );\n};\n\nFilter.protoType = {\n  filter: PropTypes.string,\n  onChangeFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map((contact) => {\n        return (\n          <li className={s.item} key={contact.id}>\n            <span>\n              {contact.name}: {contact.number}\n            </span>\n            <button\n              className={s.button}\n              type=\"button\"\n              id={contact.id}\n              onClick={() => deleteContact(contact.id)}\n            >\n              remove\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport Section from \"./components/Section/Section\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (data) => {\n    this.setState((prevState) => {\n      if (\n        prevState.contacts.some((contact) => contact.name.includes(data.name))\n      ) {\n        return alert(`${data.name} is already in contacts!`);\n      }\n\n      return { contacts: [...prevState.contacts, data] };\n    });\n  };\n\n  deleteContact = (currentId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: [\n          ...prevState.contacts.filter((contact) => contact.id !== currentId),\n        ],\n      };\n    });\n  };\n\n  changeFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value.toLocaleLowerCase() });\n  };\n\n  turnOnFilter = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(filter)\n    );\n  };\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Section title=\"Phonebook\">\n          <ContactForm onSubmit={this.addContact}></ContactForm>\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter\n            filter={this.state.filter}\n            onChangeFilter={this.changeFilter}\n          />\n          {this.state.filter === \"\" ? (\n            <ContactList\n              contacts={this.state.contacts}\n              deleteContact={this.deleteContact}\n            />\n          ) : (\n            <ContactList\n              contacts={this.turnOnFilter()}\n              deleteContact={this.deleteContact}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__d4CCO\",\"label\":\"ContactForm_label__3Sa04\",\"input\":\"ContactForm_input__37HjP\",\"button\":\"ContactForm_button__1diul\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sector\":\"Filter_sector__2muO4\",\"label\":\"Filter_label__3-__t\",\"input\":\"Filter_input__1JQWV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1Fm16\",\"button\":\"ContactList_button__2J8j7\"};"],"sourceRoot":""}